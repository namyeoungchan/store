{"version":3,"file":"static/js/220.0602b3d5.chunk.js","mappings":"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","sources":["pages/SalesCalendarPage.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { SalesService } from '../services/salesService';\nimport { OrderService } from '../services/orderService';\nimport { Order, PaymentType } from '../types';\n\ninterface CalendarDay {\n  date: string;\n  isCurrentMonth: boolean;\n  isToday: boolean;\n  salesAmount: number;\n  orderCount: number;\n  expectedDeposits: number;\n  depositCount: number;\n  orders: Order[];\n}\n\ninterface DayDetailModal {\n  show: boolean;\n  day: CalendarDay | null;\n}\n\nconst SalesCalendarPage: React.FC = () => {\n  const [currentDate, setCurrentDate] = useState(new Date());\n  const [calendarDays, setCalendarDays] = useState<CalendarDay[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [detailModal, setDetailModal] = useState<DayDetailModal>({ show: false, day: null });\n\n  useEffect(() => {\n    loadCalendarData();\n  }, [currentDate]);\n\n  const loadCalendarData = async () => {\n    setLoading(true);\n    try {\n      const year = currentDate.getFullYear();\n      const month = currentDate.getMonth();\n\n      // 캘린더 날짜 범위 계산 (이전/다음 달 일부 포함)\n      const firstDay = new Date(year, month, 1);\n      const lastDay = new Date(year, month + 1, 0);\n      const startDate = new Date(firstDay);\n      startDate.setDate(startDate.getDate() - firstDay.getDay()); // 주의 시작부터\n      const endDate = new Date(lastDay);\n      endDate.setDate(endDate.getDate() + (6 - lastDay.getDay())); // 주의 끝까지\n\n      // 모든 주문 데이터 가져오기\n      const allOrders = await OrderService.getAllOrders();\n      const depositSchedules = await SalesService.getDepositSchedule();\n\n      // 날짜별 데이터 그룹화\n      const dayDataMap = new Map<string, CalendarDay>();\n\n      // 날짜 범위 내 모든 날짜 초기화\n      const current = new Date(startDate);\n      while (current <= endDate) {\n        const dateStr = current.toISOString().split('T')[0];\n        dayDataMap.set(dateStr, {\n          date: dateStr,\n          isCurrentMonth: current.getMonth() === month,\n          isToday: dateStr === new Date().toISOString().split('T')[0],\n          salesAmount: 0,\n          orderCount: 0,\n          expectedDeposits: 0,\n          depositCount: 0,\n          orders: []\n        });\n        current.setDate(current.getDate() + 1);\n      }\n\n      // 주문 데이터 매핑\n      allOrders.forEach(order => {\n        if (order.order_date) {\n          const orderDate = order.order_date.split('T')[0];\n          const dayData = dayDataMap.get(orderDate);\n          if (dayData) {\n            dayData.salesAmount += order.total_amount;\n            dayData.orderCount += 1;\n            dayData.orders.push(order);\n          }\n        }\n      });\n\n      // 입금 예정 데이터 매핑\n      depositSchedules.forEach(schedule => {\n        const dayData = dayDataMap.get(schedule.date);\n        if (dayData) {\n          dayData.expectedDeposits += schedule.total_amount;\n          dayData.depositCount += schedule.orders.length;\n        }\n      });\n\n      setCalendarDays(Array.from(dayDataMap.values()));\n    } catch (error) {\n      console.error('캘린더 데이터 로딩 실패:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const formatCurrency = (amount: number): string => {\n    if (amount === 0) return '';\n    return new Intl.NumberFormat('ko-KR', {\n      style: 'currency',\n      currency: 'KRW',\n      minimumFractionDigits: 0\n    }).format(amount);\n  };\n\n  const formatCompactCurrency = (amount: number): string => {\n    if (amount === 0) return '';\n    if (amount >= 10000) {\n      return `${Math.floor(amount / 10000)}만원`;\n    }\n    return `${Math.floor(amount / 1000)}천원`;\n  };\n\n  const navigateMonth = (direction: 'prev' | 'next') => {\n    const newDate = new Date(currentDate);\n    if (direction === 'prev') {\n      newDate.setMonth(newDate.getMonth() - 1);\n    } else {\n      newDate.setMonth(newDate.getMonth() + 1);\n    }\n    setCurrentDate(newDate);\n  };\n\n  const goToToday = () => {\n    setCurrentDate(new Date());\n  };\n\n  const openDayDetail = (day: CalendarDay) => {\n    if (day.isCurrentMonth && (day.salesAmount > 0 || day.expectedDeposits > 0)) {\n      setDetailModal({ show: true, day });\n    }\n  };\n\n  const closeDayDetail = () => {\n    setDetailModal({ show: false, day: null });\n  };\n\n  const getPaymentTypeIcon = (type: PaymentType): string => {\n    return SalesService.getPaymentTypeIcon(type);\n  };\n\n  const getPaymentTypeDisplayName = (type: PaymentType): string => {\n    return SalesService.getPaymentTypeDisplayName(type);\n  };\n\n  const weekdays = ['일', '월', '화', '수', '목', '금', '토'];\n\n  if (loading) {\n    return (\n      <div className=\"calendar-loading\">\n        <div className=\"loading-spinner\"></div>\n        <p>캘린더를 불러오는 중...</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"sales-calendar-page\">\n      {/* Header */}\n      <div className=\"calendar-header\">\n        <div className=\"header-content\">\n          <h1>📅 매출 & 입금 캘린더</h1>\n          <p>일자별 매출과 입금 예정 현황을 한눈에 확인하세요</p>\n        </div>\n        <div className=\"header-actions\">\n          <button className=\"today-btn\" onClick={goToToday}>\n            오늘\n          </button>\n          <button className=\"refresh-btn\" onClick={loadCalendarData}>\n            🔄 새로고침\n          </button>\n        </div>\n      </div>\n\n      {/* Calendar Navigation */}\n      <div className=\"calendar-nav\">\n        <button className=\"nav-btn\" onClick={() => navigateMonth('prev')}>\n          ◀ 이전\n        </button>\n        <h2 className=\"current-month\">\n          {currentDate.getFullYear()}년 {currentDate.getMonth() + 1}월\n        </h2>\n        <button className=\"nav-btn\" onClick={() => navigateMonth('next')}>\n          다음 ▶\n        </button>\n      </div>\n\n      {/* Legend */}\n      <div className=\"calendar-legend\">\n        <div className=\"legend-item\">\n          <div className=\"legend-color sales\"></div>\n          <span>매출</span>\n        </div>\n        <div className=\"legend-item\">\n          <div className=\"legend-color deposit\"></div>\n          <span>입금 예정</span>\n        </div>\n        <div className=\"legend-note\">\n          * 날짜를 클릭하면 상세 내역을 볼 수 있습니다\n        </div>\n      </div>\n\n      {/* Calendar Grid */}\n      <div className=\"calendar-container\">\n        <div className=\"calendar-grid\">\n          {/* Weekday Headers */}\n          {weekdays.map(day => (\n            <div key={day} className=\"weekday-header\">\n              {day}\n            </div>\n          ))}\n\n          {/* Calendar Days */}\n          {calendarDays.map((day, index) => (\n            <div\n              key={index}\n              className={`calendar-day ${!day.isCurrentMonth ? 'other-month' : ''} ${day.isToday ? 'today' : ''} ${\n                day.salesAmount > 0 || day.expectedDeposits > 0 ? 'has-data' : ''\n              }`}\n              onClick={() => openDayDetail(day)}\n            >\n              <div className=\"day-number\">\n                {new Date(day.date).getDate()}\n              </div>\n\n              {day.isCurrentMonth && (\n                <div className=\"day-content\">\n                  {day.salesAmount > 0 && (\n                    <div className=\"sales-info\">\n                      <div className=\"amount sales\">\n                        {formatCompactCurrency(day.salesAmount)}\n                      </div>\n                      <div className=\"count\">\n                        {day.orderCount}건\n                      </div>\n                    </div>\n                  )}\n\n                  {day.expectedDeposits > 0 && (\n                    <div className=\"deposit-info\">\n                      <div className=\"amount deposit\">\n                        💰 {formatCompactCurrency(day.expectedDeposits)}\n                      </div>\n                      <div className=\"count\">\n                        {day.depositCount}건\n                      </div>\n                    </div>\n                  )}\n                </div>\n              )}\n            </div>\n          ))}\n        </div>\n      </div>\n\n      {/* Detail Modal */}\n      {detailModal.show && detailModal.day && (\n        <div className=\"modal-overlay\" onClick={closeDayDetail}>\n          <div className=\"modal-content\" onClick={e => e.stopPropagation()}>\n            <div className=\"modal-header\">\n              <h3>\n                {new Date(detailModal.day.date).toLocaleDateString('ko-KR', {\n                  year: 'numeric',\n                  month: 'long',\n                  day: 'numeric',\n                  weekday: 'long'\n                })} 상세\n              </h3>\n              <button className=\"close-modal-btn\" onClick={closeDayDetail}>\n                ✕\n              </button>\n            </div>\n\n            <div className=\"modal-body\">\n              {/* Summary */}\n              <div className=\"day-summary\">\n                <div className=\"summary-item\">\n                  <div className=\"summary-icon\">💰</div>\n                  <div className=\"summary-details\">\n                    <div className=\"summary-title\">총 매출</div>\n                    <div className=\"summary-value\">\n                      {formatCurrency(detailModal.day.salesAmount)}\n                    </div>\n                    <div className=\"summary-subtitle\">\n                      {detailModal.day.orderCount}건 주문\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"summary-item\">\n                  <div className=\"summary-icon\">📅</div>\n                  <div className=\"summary-details\">\n                    <div className=\"summary-title\">입금 예정</div>\n                    <div className=\"summary-value\">\n                      {formatCurrency(detailModal.day.expectedDeposits)}\n                    </div>\n                    <div className=\"summary-subtitle\">\n                      {detailModal.day.depositCount}건 대기\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              {/* Orders List */}\n              {detailModal.day.orders.length > 0 && (\n                <div className=\"orders-section\">\n                  <h4>주문 내역</h4>\n                  <div className=\"orders-list\">\n                    {detailModal.day.orders.map(order => (\n                      <div key={order.id} className=\"order-item\">\n                        <div className=\"order-info\">\n                          <div className=\"order-id\">주문 #{order.id}</div>\n                          <div className=\"order-details\">\n                            <span className=\"payment-type\">\n                              {getPaymentTypeIcon(order.payment_type)}\n                              {getPaymentTypeDisplayName(order.payment_type)}\n                            </span>\n                            <span className=\"order-time\">\n                              {order.order_date ?\n                                new Date(order.order_date).toLocaleTimeString('ko-KR', {\n                                  hour: '2-digit',\n                                  minute: '2-digit'\n                                }) : ''\n                              }\n                            </span>\n                          </div>\n                        </div>\n                        <div className=\"order-amount\">\n                          {formatCurrency(order.total_amount)}\n                        </div>\n                        <div className={`order-status ${order.is_deposited ? 'deposited' : 'pending'}`}>\n                          {order.is_deposited ? '입금완료' : '대기중'}\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      )}\n\n      <style>{`\n        .sales-calendar-page {\n          min-height: 100vh;\n          background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n          padding: var(--space-6);\n        }\n\n        .calendar-loading {\n          display: flex;\n          flex-direction: column;\n          align-items: center;\n          justify-content: center;\n          min-height: 60vh;\n          color: white;\n        }\n\n        .loading-spinner {\n          width: 40px;\n          height: 40px;\n          border: 3px solid rgba(255, 255, 255, 0.3);\n          border-top: 3px solid white;\n          border-radius: 50%;\n          animation: spin 1s linear infinite;\n          margin-bottom: var(--space-4);\n        }\n\n        @keyframes spin {\n          0% { transform: rotate(0deg); }\n          100% { transform: rotate(360deg); }\n        }\n\n        /* Header */\n        .calendar-header {\n          background: rgba(255, 255, 255, 0.1);\n          backdrop-filter: blur(20px);\n          border: 1px solid rgba(255, 255, 255, 0.2);\n          border-radius: 20px;\n          padding: var(--space-6);\n          margin-bottom: var(--space-6);\n          display: flex;\n          justify-content: space-between;\n          align-items: center;\n          color: white;\n        }\n\n        .header-content h1 {\n          margin: 0 0 var(--space-2) 0;\n          font-size: 2rem;\n          font-weight: 700;\n        }\n\n        .header-content p {\n          margin: 0;\n          opacity: 0.9;\n          font-size: 1.1rem;\n        }\n\n        .header-actions {\n          display: flex;\n          gap: var(--space-3);\n        }\n\n        .today-btn,\n        .refresh-btn {\n          background: rgba(255, 255, 255, 0.2);\n          border: 1px solid rgba(255, 255, 255, 0.3);\n          border-radius: 12px;\n          color: white;\n          padding: var(--space-3) var(--space-4);\n          cursor: pointer;\n          transition: all 0.3s ease;\n          backdrop-filter: blur(10px);\n          font-weight: 500;\n        }\n\n        .today-btn:hover,\n        .refresh-btn:hover {\n          background: rgba(255, 255, 255, 0.3);\n          transform: translateY(-1px);\n        }\n\n        /* Calendar Navigation */\n        .calendar-nav {\n          display: flex;\n          justify-content: center;\n          align-items: center;\n          gap: var(--space-6);\n          margin-bottom: var(--space-4);\n        }\n\n        .nav-btn {\n          background: rgba(255, 255, 255, 0.1);\n          border: 1px solid rgba(255, 255, 255, 0.2);\n          border-radius: 12px;\n          color: white;\n          padding: var(--space-3) var(--space-5);\n          cursor: pointer;\n          transition: all 0.3s ease;\n          backdrop-filter: blur(10px);\n          font-weight: 500;\n        }\n\n        .nav-btn:hover {\n          background: rgba(255, 255, 255, 0.2);\n          transform: translateY(-1px);\n        }\n\n        .current-month {\n          color: white;\n          font-size: 1.5rem;\n          font-weight: 700;\n          margin: 0;\n          text-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n        }\n\n        /* Legend */\n        .calendar-legend {\n          display: flex;\n          justify-content: center;\n          align-items: center;\n          gap: var(--space-6);\n          margin-bottom: var(--space-6);\n          color: white;\n          font-size: 0.9rem;\n        }\n\n        .legend-item {\n          display: flex;\n          align-items: center;\n          gap: var(--space-2);\n        }\n\n        .legend-color {\n          width: 16px;\n          height: 16px;\n          border-radius: 4px;\n        }\n\n        .legend-color.sales {\n          background: linear-gradient(135deg, #10b981, #059669);\n        }\n\n        .legend-color.deposit {\n          background: linear-gradient(135deg, #f59e0b, #d97706);\n        }\n\n        .legend-note {\n          opacity: 0.8;\n          font-style: italic;\n        }\n\n        /* Calendar Container */\n        .calendar-container {\n          background: rgba(255, 255, 255, 0.95);\n          backdrop-filter: blur(20px);\n          border-radius: 20px;\n          padding: var(--space-6);\n          border: 1px solid rgba(255, 255, 255, 0.3);\n          box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);\n        }\n\n        .calendar-grid {\n          display: grid;\n          grid-template-columns: repeat(7, 1fr);\n          gap: 1px;\n          background: var(--gray-200);\n          border-radius: 12px;\n          overflow: hidden;\n        }\n\n        .weekday-header {\n          background: var(--gray-100);\n          padding: var(--space-3);\n          text-align: center;\n          font-weight: 600;\n          color: var(--gray-600);\n          font-size: 0.875rem;\n        }\n\n        .calendar-day {\n          background: white;\n          min-height: 120px;\n          padding: var(--space-2);\n          display: flex;\n          flex-direction: column;\n          position: relative;\n          transition: all 0.2s ease;\n        }\n\n        .calendar-day.other-month {\n          background: var(--gray-50);\n          opacity: 0.5;\n        }\n\n        .calendar-day.today {\n          background: linear-gradient(135deg, #dbeafe, #bfdbfe);\n          border: 2px solid var(--primary-500);\n        }\n\n        .calendar-day.has-data {\n          cursor: pointer;\n        }\n\n        .calendar-day.has-data:hover {\n          transform: scale(1.02);\n          box-shadow: 0 4px 16px rgba(0, 0, 0, 0.1);\n          z-index: 1;\n        }\n\n        .day-number {\n          font-weight: 600;\n          color: var(--gray-900);\n          margin-bottom: var(--space-2);\n        }\n\n        .calendar-day.today .day-number {\n          color: var(--primary-700);\n          font-weight: 700;\n        }\n\n        .day-content {\n          flex: 1;\n          display: flex;\n          flex-direction: column;\n          gap: var(--space-1);\n        }\n\n        .sales-info,\n        .deposit-info {\n          padding: var(--space-1);\n          border-radius: 6px;\n          font-size: 0.75rem;\n        }\n\n        .sales-info {\n          background: linear-gradient(135deg, #dcfdf7, #a7f3d0);\n          border: 1px solid #6ee7b7;\n        }\n\n        .deposit-info {\n          background: linear-gradient(135deg, #fef3c7, #fde68a);\n          border: 1px solid #fbbf24;\n        }\n\n        .amount {\n          font-weight: 600;\n          margin-bottom: 2px;\n        }\n\n        .amount.sales {\n          color: var(--success-700);\n        }\n\n        .amount.deposit {\n          color: var(--warning-700);\n        }\n\n        .count {\n          font-size: 0.65rem;\n          opacity: 0.8;\n        }\n\n        /* Modal */\n        .modal-overlay {\n          position: fixed;\n          top: 0;\n          left: 0;\n          right: 0;\n          bottom: 0;\n          background: rgba(0, 0, 0, 0.5);\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          z-index: 1000;\n          backdrop-filter: blur(4px);\n        }\n\n        .modal-content {\n          background: white;\n          border-radius: 20px;\n          width: 90%;\n          max-width: 600px;\n          max-height: 80vh;\n          overflow: hidden;\n          box-shadow: 0 20px 40px rgba(0, 0, 0, 0.2);\n        }\n\n        .modal-header {\n          background: linear-gradient(135deg, var(--primary-500), var(--primary-600));\n          color: white;\n          padding: var(--space-6);\n          display: flex;\n          justify-content: space-between;\n          align-items: center;\n        }\n\n        .modal-header h3 {\n          margin: 0;\n          font-size: 1.25rem;\n          font-weight: 600;\n        }\n\n        .close-modal-btn {\n          background: none;\n          border: none;\n          color: white;\n          font-size: 1.25rem;\n          cursor: pointer;\n          padding: var(--space-2);\n          border-radius: 6px;\n          transition: background 0.2s ease;\n        }\n\n        .close-modal-btn:hover {\n          background: rgba(255, 255, 255, 0.2);\n        }\n\n        .modal-body {\n          padding: var(--space-6);\n          overflow-y: auto;\n          max-height: calc(80vh - 120px);\n        }\n\n        /* Day Summary */\n        .day-summary {\n          display: grid;\n          grid-template-columns: repeat(2, 1fr);\n          gap: var(--space-4);\n          margin-bottom: var(--space-6);\n        }\n\n        .summary-item {\n          background: var(--gray-50);\n          border-radius: 16px;\n          padding: var(--space-5);\n          display: flex;\n          align-items: center;\n          gap: var(--space-4);\n        }\n\n        .summary-icon {\n          font-size: 2rem;\n          width: 60px;\n          height: 60px;\n          border-radius: 50%;\n          background: linear-gradient(135deg, var(--primary-100), var(--primary-200));\n          display: flex;\n          align-items: center;\n          justify-content: center;\n        }\n\n        .summary-title {\n          font-size: 0.875rem;\n          color: var(--gray-600);\n          margin-bottom: var(--space-1);\n        }\n\n        .summary-value {\n          font-size: 1.25rem;\n          font-weight: 700;\n          color: var(--gray-900);\n          margin-bottom: var(--space-1);\n        }\n\n        .summary-subtitle {\n          font-size: 0.75rem;\n          color: var(--gray-500);\n        }\n\n        /* Orders Section */\n        .orders-section h4 {\n          margin: 0 0 var(--space-4) 0;\n          color: var(--gray-900);\n          font-size: 1.125rem;\n          font-weight: 600;\n        }\n\n        .orders-list {\n          display: flex;\n          flex-direction: column;\n          gap: var(--space-3);\n        }\n\n        .order-item {\n          background: white;\n          border: 2px solid var(--gray-200);\n          border-radius: 12px;\n          padding: var(--space-4);\n          display: flex;\n          justify-content: space-between;\n          align-items: center;\n          transition: all 0.2s ease;\n        }\n\n        .order-item:hover {\n          border-color: var(--primary-300);\n          transform: translateY(-1px);\n          box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n        }\n\n        .order-info {\n          flex: 1;\n        }\n\n        .order-id {\n          font-weight: 600;\n          color: var(--gray-900);\n          margin-bottom: var(--space-1);\n        }\n\n        .order-details {\n          display: flex;\n          gap: var(--space-3);\n          font-size: 0.875rem;\n          color: var(--gray-600);\n        }\n\n        .payment-type {\n          display: flex;\n          align-items: center;\n          gap: var(--space-1);\n        }\n\n        .order-amount {\n          font-weight: 700;\n          color: var(--gray-900);\n          margin-right: var(--space-4);\n        }\n\n        .order-status {\n          padding: var(--space-1) var(--space-3);\n          border-radius: var(--radius-sm);\n          font-size: 0.75rem;\n          font-weight: 600;\n        }\n\n        .order-status.deposited {\n          background: var(--success-100);\n          color: var(--success-700);\n        }\n\n        .order-status.pending {\n          background: var(--warning-100);\n          color: var(--warning-700);\n        }\n\n        /* Responsive Design */\n        @media (max-width: 768px) {\n          .sales-calendar-page {\n            padding: var(--space-4);\n          }\n\n          .calendar-header {\n            flex-direction: column;\n            gap: var(--space-4);\n            text-align: center;\n          }\n\n          .header-content h1 {\n            font-size: 1.5rem;\n          }\n\n          .calendar-nav {\n            gap: var(--space-4);\n          }\n\n          .current-month {\n            font-size: 1.25rem;\n          }\n\n          .calendar-legend {\n            flex-direction: column;\n            gap: var(--space-2);\n          }\n\n          .calendar-day {\n            min-height: 80px;\n            padding: var(--space-1);\n          }\n\n          .day-content {\n            gap: 2px;\n          }\n\n          .sales-info,\n          .deposit-info {\n            padding: 2px;\n            font-size: 0.65rem;\n          }\n\n          .modal-content {\n            width: 95%;\n            margin: var(--space-4);\n          }\n\n          .day-summary {\n            grid-template-columns: 1fr;\n          }\n\n          .order-item {\n            flex-direction: column;\n            align-items: stretch;\n            gap: var(--space-2);\n          }\n\n          .order-details {\n            justify-content: space-between;\n          }\n        }\n      `}</style>\n    </div>\n  );\n};\n\nexport default SalesCalendarPage;"],"names":["SalesCalendarPage","currentDate","setCurrentDate","useState","Date","calendarDays","setCalendarDays","loading","setLoading","detailModal","setDetailModal","show","day","useEffect","loadCalendarData","async","year","getFullYear","month","getMonth","firstDay","lastDay","startDate","setDate","getDate","getDay","endDate","allOrders","OrderService","getAllOrders","depositSchedules","SalesService","getDepositSchedule","dayDataMap","Map","current","dateStr","toISOString","split","set","date","isCurrentMonth","isToday","salesAmount","orderCount","expectedDeposits","depositCount","orders","forEach","order","order_date","orderDate","dayData","get","total_amount","push","schedule","length","Array","from","values","error","console","formatCurrency","amount","Intl","NumberFormat","style","currency","minimumFractionDigits","format","formatCompactCurrency","concat","Math","floor","navigateMonth","direction","newDate","setMonth","closeDayDetail","getPaymentTypeDisplayName","type","_jsxs","className","children","_jsx","onClick","goToToday","map","index","openDayDetail","e","stopPropagation","toLocaleDateString","weekday","id","payment_type","getPaymentTypeIcon","toLocaleTimeString","hour","minute","is_deposited"],"sourceRoot":""}