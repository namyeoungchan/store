{"version":3,"file":"static/js/828.8dfcf5d0.chunk.js","mappings":"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","sources":["components/SalesDashboard.tsx","pages/SalesPage.tsx","components/Toast.tsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { SalesAnalytics, DepositSchedule } from '../types';\nimport { SalesService } from '../services/salesService';\nimport Toast from './Toast';\n\nconst SalesDashboard: React.FC = () => {\n  const [analytics, setAnalytics] = useState<SalesAnalytics | null>(null);\n  const [depositSchedule, setDepositSchedule] = useState<DepositSchedule[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [toast, setToast] = useState<{ show: boolean; message: string; type: 'success' | 'error' }>({\n    show: false,\n    message: '',\n    type: 'success'\n  });\n\n  const showToast = (message: string, type: 'success' | 'error') => {\n    setToast({ show: true, message, type });\n  };\n\n  const hideToast = () => {\n    setToast({ show: false, message: '', type: 'success' });\n  };\n\n  const loadData = useCallback(async () => {\n    setLoading(true);\n    try {\n      const analyticsData = await SalesService.getSalesAnalytics();\n      const scheduleData = await SalesService.getDepositSchedule();\n\n      setAnalytics(analyticsData);\n      setDepositSchedule(scheduleData);\n    } catch (error) {\n      showToast('데이터를 불러오는데 실패했습니다.', 'error');\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  useEffect(() => {\n    loadData();\n  }, []);\n\n  const handleMarkAsDeposited = async (orderId: string) => {\n    try {\n      await SalesService.markAsDeposited(orderId);\n      showToast('입금 완료 처리되었습니다.', 'success');\n      await loadData();\n    } catch (error) {\n      showToast('입금 처리에 실패했습니다.', 'error');\n    }\n  };\n\n  const handleMarkDateAsDeposited = async (date: string) => {\n    try {\n      const count = SalesService.markDateAsDeposited(date);\n      showToast(`${count}개 주문이 입금 완료 처리되었습니다.`, 'success');\n      loadData();\n    } catch (error) {\n      showToast('일괄 입금 처리에 실패했습니다.', 'error');\n    }\n  };\n\n  const formatDate = (dateString: string) => {\n    const date = new Date(dateString);\n    const today = new Date();\n    const diffTime = date.getTime() - today.getTime();\n    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n\n    if (diffDays === 0) return '오늘';\n    if (diffDays === 1) return '내일';\n    if (diffDays === -1) return '어제';\n    if (diffDays > 0) return `${diffDays}일 후`;\n    return `${Math.abs(diffDays)}일 전`;\n  };\n\n  if (loading && !analytics) {\n    return (\n      <div className=\"loading-screen\">\n        <div className=\"loading-spinner\"></div>\n        <p>매출 데이터를 불러오는 중...</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"modern-sales-dashboard\">\n      <div className=\"page-header\">\n        <div className=\"header-content\">\n          <h1 className=\"page-title\">\n            <span className=\"title-icon\">💰</span>\n            매출 관리 대시보드\n          </h1>\n          <p className=\"page-subtitle\">실시간 매출 현황과 입금 스케줄을 확인하세요</p>\n        </div>\n        <button className=\"action-button primary\" onClick={loadData} disabled={loading}>\n          <span className=\"button-icon\">🔄</span>\n          {loading ? '새로고침 중...' : '새로고침'}\n        </button>\n      </div>\n\n      {analytics && (\n        <>\n          {/* 매출 요약 */}\n          <div className=\"stats-grid\">\n            <div className=\"stat-card primary-gradient\">\n              <div className=\"stat-header\">\n                <span className=\"stat-icon\">💎</span>\n                <span className=\"stat-title\">총 매출</span>\n              </div>\n              <div className=\"stat-value\">₩{analytics.total_sales.toLocaleString()}</div>\n              <div className=\"stat-trend positive\">전체 누적 매출</div>\n            </div>\n\n            <div className=\"stat-card warning-gradient\">\n              <div className=\"stat-header\">\n                <span className=\"stat-icon\">⏳</span>\n                <span className=\"stat-title\">입금 대기</span>\n              </div>\n              <div className=\"stat-value\">₩{analytics.pending_deposits.toLocaleString()}</div>\n              <div className=\"stat-trend\">미입금 금액</div>\n            </div>\n\n            <div className=\"stat-card success-gradient\">\n              <div className=\"stat-header\">\n                <span className=\"stat-icon\">📅</span>\n                <span className=\"stat-title\">오늘 매출</span>\n              </div>\n              <div className=\"stat-value\">₩{analytics.today_sales.toLocaleString()}</div>\n              <div className=\"stat-trend positive\">일일 매출</div>\n            </div>\n\n            <div className=\"stat-card info-gradient\">\n              <div className=\"stat-header\">\n                <span className=\"stat-icon\">📊</span>\n                <span className=\"stat-title\">이번 주</span>\n              </div>\n              <div className=\"stat-value\">₩{analytics.this_week_sales.toLocaleString()}</div>\n              <div className=\"stat-trend\">주간 매출</div>\n            </div>\n\n            <div className=\"stat-card secondary-gradient\">\n              <div className=\"stat-header\">\n                <span className=\"stat-icon\">🗓️</span>\n                <span className=\"stat-title\">이번 달</span>\n              </div>\n              <div className=\"stat-value\">₩{analytics.this_month_sales.toLocaleString()}</div>\n              <div className=\"stat-trend\">월간 매출</div>\n            </div>\n          </div>\n\n          {/* 결제 유형별 매출 */}\n          <div className=\"card\">\n            <div className=\"card-header\">\n              <h2 className=\"card-title\">\n                <span className=\"title-icon\">🏪</span>\n                결제 유형별 매출\n              </h2>\n            </div>\n            <div className=\"card-content\">\n              <div className=\"payment-grid\">\n                {analytics.payment_type_breakdown.map(item => (\n                  <div key={item.type} className=\"payment-card\">\n                    <div className=\"payment-header\">\n                      <span className=\"payment-icon\">\n                        {SalesService.getPaymentTypeIcon(item.type)}\n                      </span>\n                      <span className=\"payment-name\">\n                        {SalesService.getPaymentTypeDisplayName(item.type)}\n                      </span>\n                    </div>\n                    <div className=\"payment-amount\">₩{item.amount.toLocaleString()}</div>\n                    <div className=\"payment-count\">{item.count}건</div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n        </>\n      )}\n\n      {/* 입금 스케줄 */}\n      <div className=\"card\">\n        <div className=\"card-header\">\n          <h2 className=\"card-title\">\n            <span className=\"title-icon\">💳</span>\n            입금 예정 스케줄\n          </h2>\n        </div>\n        <div className=\"card-content\">\n          {depositSchedule.length === 0 ? (\n            <div className=\"empty-state\">\n              <div className=\"empty-icon\">✅</div>\n              <h3>모든 입금이 완료되었습니다</h3>\n              <p>현재 입금 대기 중인 주문이 없습니다.</p>\n            </div>\n          ) : (\n            <div className=\"deposit-list\">\n              {depositSchedule.map(schedule => (\n                <div key={schedule.date} className=\"deposit-item\">\n                  <div className=\"deposit-header\">\n                    <div className=\"deposit-date\">\n                      <span className=\"date-main\">{schedule.date}</span>\n                      <span className=\"date-relative\">{formatDate(schedule.date)}</span>\n                    </div>\n                    <div className=\"deposit-amount\">₩{schedule.total_amount.toLocaleString()}</div>\n                    <button\n                      className=\"action-button primary small\"\n                      onClick={() => handleMarkDateAsDeposited(schedule.date)}\n                    >\n                      일괄 입금완료\n                    </button>\n                  </div>\n                  <div className=\"order-list\">\n                    {schedule.orders.map(order => (\n                      <div key={order.id} className=\"order-item\">\n                        <div className=\"order-details\">\n                          <span className=\"order-id\">주문 #{order.id}</span>\n                          <span className=\"order-type\">\n                            {SalesService.getPaymentTypeIcon(order.payment_type)}\n                            {SalesService.getPaymentTypeDisplayName(order.payment_type)}\n                          </span>\n                          <span className=\"order-date\">\n                            {new Date(order.order_date).toLocaleDateString()}\n                          </span>\n                        </div>\n                        <div className=\"order-amount\">₩{order.amount.toLocaleString()}</div>\n                        <button\n                          className=\"action-button secondary small\"\n                          onClick={() => handleMarkAsDeposited(order.id)}\n                        >\n                          입금완료\n                        </button>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              ))}\n            </div>\n          )}\n        </div>\n      </div>\n\n      {/* Toast */}\n      {toast.show && (\n        <Toast\n          message={toast.message}\n          type={toast.type}\n          onClose={hideToast}\n        />\n      )}\n\n      <style>{`\n        .modern-sales-dashboard {\n          padding: var(--space-8);\n          max-width: 1400px;\n          margin: 0 auto;\n          background: var(--gray-50);\n          min-height: 100vh;\n          display: flex;\n          flex-direction: column;\n          gap: var(--space-8);\n        }\n\n        .page-header {\n          display: flex;\n          justify-content: space-between;\n          align-items: flex-start;\n          background: white;\n          padding: var(--space-8);\n          border-radius: var(--radius-xl);\n          box-shadow: var(--shadow-lg);\n          border: 1px solid var(--gray-200);\n        }\n\n        .header-content {\n          flex: 1;\n        }\n\n        .page-title {\n          font-size: 2rem;\n          font-weight: 700;\n          color: var(--gray-900);\n          margin: 0 0 var(--space-2) 0;\n          display: flex;\n          align-items: center;\n          gap: var(--space-3);\n        }\n\n        .title-icon {\n          font-size: 2.5rem;\n        }\n\n        .page-subtitle {\n          color: var(--gray-600);\n          margin: 0;\n          font-size: 1.1rem;\n        }\n\n        .action-button {\n          background: var(--primary-600);\n          color: white;\n          border: none;\n          padding: var(--space-4) var(--space-6);\n          border-radius: var(--radius-lg);\n          cursor: pointer;\n          font-weight: 600;\n          font-size: 0.95rem;\n          transition: all var(--transition-fast);\n          display: flex;\n          align-items: center;\n          gap: var(--space-2);\n          box-shadow: var(--shadow-md);\n        }\n\n        .action-button:hover:not(:disabled) {\n          background: var(--primary-700);\n          transform: translateY(-2px);\n          box-shadow: var(--shadow-lg);\n        }\n\n        .action-button:disabled {\n          opacity: 0.6;\n          cursor: not-allowed;\n        }\n\n        .action-button.small {\n          padding: var(--space-2) var(--space-4);\n          font-size: 0.85rem;\n        }\n\n        .action-button.secondary {\n          background: var(--gray-600);\n        }\n\n        .action-button.secondary:hover:not(:disabled) {\n          background: var(--gray-700);\n        }\n\n        .button-icon {\n          font-size: 1rem;\n        }\n\n        .stats-grid {\n          display: grid;\n          grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));\n          gap: var(--space-6);\n        }\n\n        .stat-card {\n          background: white;\n          border-radius: var(--radius-xl);\n          padding: var(--space-6);\n          box-shadow: var(--shadow-lg);\n          border: 1px solid var(--gray-200);\n          position: relative;\n          overflow: hidden;\n          transition: all var(--transition-fast);\n        }\n\n        .stat-card:hover {\n          transform: translateY(-4px);\n          box-shadow: var(--shadow-xl);\n        }\n\n        .stat-card::before {\n          content: '';\n          position: absolute;\n          top: 0;\n          left: 0;\n          right: 0;\n          height: 4px;\n          background: linear-gradient(90deg, var(--primary-500), var(--primary-600));\n        }\n\n        .stat-card.warning-gradient::before {\n          background: linear-gradient(90deg, var(--warning-500), var(--warning-600));\n        }\n\n        .stat-card.success-gradient::before {\n          background: linear-gradient(90deg, var(--success-500), var(--success-600));\n        }\n\n        .stat-card.info-gradient::before {\n          background: linear-gradient(90deg, var(--primary-400), var(--primary-500));\n        }\n\n        .stat-card.secondary-gradient::before {\n          background: linear-gradient(90deg, var(--gray-500), var(--gray-600));\n        }\n\n        .stat-header {\n          display: flex;\n          align-items: center;\n          gap: var(--space-3);\n          margin-bottom: var(--space-4);\n        }\n\n        .stat-icon {\n          font-size: 2rem;\n        }\n\n        .stat-title {\n          font-weight: 600;\n          color: var(--gray-700);\n          font-size: 0.95rem;\n        }\n\n        .stat-value {\n          font-size: 2rem;\n          font-weight: 700;\n          color: var(--gray-900);\n          margin-bottom: var(--space-2);\n        }\n\n        .stat-trend {\n          font-size: 0.85rem;\n          color: var(--gray-600);\n        }\n\n        .stat-trend.positive {\n          color: var(--success-600);\n        }\n\n        .card {\n          background: white;\n          border-radius: var(--radius-xl);\n          box-shadow: var(--shadow-lg);\n          border: 1px solid var(--gray-200);\n          overflow: hidden;\n        }\n\n        .card-header {\n          padding: var(--space-6) var(--space-8);\n          border-bottom: 1px solid var(--gray-200);\n          background: var(--gray-50);\n        }\n\n        .card-title {\n          margin: 0;\n          font-size: 1.25rem;\n          font-weight: 700;\n          color: var(--gray-900);\n          display: flex;\n          align-items: center;\n          gap: var(--space-3);\n        }\n\n        .card-content {\n          padding: var(--space-8);\n        }\n\n        .payment-grid {\n          display: grid;\n          grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n          gap: var(--space-6);\n        }\n\n        .payment-card {\n          padding: var(--space-6);\n          border: 2px solid var(--gray-200);\n          border-radius: var(--radius-lg);\n          transition: all var(--transition-fast);\n          background: var(--gray-50);\n        }\n\n        .payment-card:hover {\n          border-color: var(--primary-300);\n          background: white;\n          transform: translateY(-2px);\n          box-shadow: var(--shadow-md);\n        }\n\n        .payment-header {\n          display: flex;\n          align-items: center;\n          gap: var(--space-3);\n          margin-bottom: var(--space-4);\n        }\n\n        .payment-icon {\n          font-size: 1.5rem;\n        }\n\n        .payment-name {\n          font-weight: 600;\n          color: var(--gray-800);\n        }\n\n        .payment-amount {\n          font-size: 1.25rem;\n          font-weight: 700;\n          color: var(--primary-600);\n          margin-bottom: var(--space-1);\n        }\n\n        .payment-count {\n          font-size: 0.85rem;\n          color: var(--gray-600);\n        }\n\n        .empty-state {\n          text-align: center;\n          padding: var(--space-20);\n          color: var(--gray-600);\n        }\n\n        .empty-icon {\n          font-size: 4rem;\n          margin-bottom: var(--space-4);\n        }\n\n        .empty-state h3 {\n          margin: 0 0 var(--space-2) 0;\n          color: var(--gray-800);\n          font-size: 1.25rem;\n        }\n\n        .empty-state p {\n          margin: 0;\n          color: var(--gray-600);\n        }\n\n        .deposit-list {\n          display: flex;\n          flex-direction: column;\n          gap: var(--space-6);\n        }\n\n        .deposit-item {\n          border: 2px solid var(--gray-200);\n          border-radius: var(--radius-lg);\n          overflow: hidden;\n          transition: all var(--transition-fast);\n        }\n\n        .deposit-item:hover {\n          border-color: var(--primary-300);\n          box-shadow: var(--shadow-md);\n        }\n\n        .deposit-header {\n          display: flex;\n          justify-content: space-between;\n          align-items: center;\n          padding: var(--space-6);\n          background: var(--gray-50);\n          border-bottom: 1px solid var(--gray-200);\n        }\n\n        .deposit-date {\n          display: flex;\n          flex-direction: column;\n          gap: var(--space-1);\n        }\n\n        .date-main {\n          font-weight: 700;\n          color: var(--gray-900);\n          font-size: 1.1rem;\n        }\n\n        .date-relative {\n          font-size: 0.85rem;\n          color: var(--gray-600);\n        }\n\n        .deposit-amount {\n          font-size: 1.25rem;\n          font-weight: 700;\n          color: var(--primary-600);\n        }\n\n        .order-list {\n          padding: var(--space-6);\n          display: flex;\n          flex-direction: column;\n          gap: var(--space-4);\n        }\n\n        .order-item {\n          display: flex;\n          justify-content: space-between;\n          align-items: center;\n          padding: var(--space-4);\n          background: var(--gray-50);\n          border-radius: var(--radius-md);\n          border: 1px solid var(--gray-200);\n        }\n\n        .order-details {\n          display: flex;\n          gap: var(--space-4);\n          align-items: center;\n          flex: 1;\n        }\n\n        .order-id {\n          font-weight: 600;\n          color: var(--gray-900);\n        }\n\n        .order-type {\n          font-size: 0.9rem;\n          color: var(--gray-600);\n          display: flex;\n          align-items: center;\n          gap: var(--space-1);\n        }\n\n        .order-date {\n          font-size: 0.85rem;\n          color: var(--gray-500);\n        }\n\n        .order-amount {\n          font-weight: 600;\n          color: var(--primary-600);\n          margin-right: var(--space-4);\n        }\n\n        @media (max-width: 768px) {\n          .modern-sales-dashboard {\n            padding: var(--space-4);\n            gap: var(--space-4);\n          }\n\n          .page-header {\n            flex-direction: column;\n            gap: var(--space-4);\n            align-items: stretch;\n          }\n\n          .stats-grid {\n            grid-template-columns: 1fr;\n          }\n\n          .payment-grid {\n            grid-template-columns: 1fr;\n          }\n\n          .deposit-header {\n            flex-direction: column;\n            gap: var(--space-4);\n            align-items: stretch;\n          }\n\n          .order-details {\n            flex-direction: column;\n            align-items: flex-start;\n            gap: var(--space-1);\n          }\n\n          .order-item {\n            flex-direction: column;\n            align-items: stretch;\n            gap: var(--space-3);\n          }\n\n          .order-amount {\n            margin-right: 0;\n            text-align: center;\n          }\n\n          .action-button {\n            justify-content: center;\n          }\n        }\n      `}</style>\n    </div>\n  );\n};\n\nexport default SalesDashboard;","import React from 'react';\nimport SalesDashboard from '../components/SalesDashboard';\n\nconst SalesPage: React.FC = () => {\n  return (\n    <div className=\"sales-page\">\n      <SalesDashboard />\n    </div>\n  );\n};\n\nexport default SalesPage;","import React, { useEffect, useState } from 'react';\nimport '../styles/components/Toast.css';\n\ninterface ToastProps {\n  message: string;\n  type: 'success' | 'error' | 'warning' | 'info';\n  duration?: number;\n  onClose: () => void;\n}\n\nconst Toast: React.FC<ToastProps> = ({\n  message,\n  type,\n  duration = 3000,\n  onClose\n}) => {\n  const [isVisible, setIsVisible] = useState(true);\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setIsVisible(false);\n      setTimeout(onClose, 300); // Wait for animation to complete\n    }, duration);\n\n    return () => clearTimeout(timer);\n  }, [duration, onClose]);\n\n  const getIcon = () => {\n    switch (type) {\n      case 'success':\n        return '✅';\n      case 'error':\n        return '❌';\n      case 'warning':\n        return '⚠️';\n      case 'info':\n        return 'ℹ️';\n      default:\n        return '';\n    }\n  };\n\n  return (\n    <div className={`toast toast-${type} ${isVisible ? 'toast-show' : 'toast-hide'}`}>\n      <div className=\"toast-content\">\n        <span className=\"toast-icon\">{getIcon()}</span>\n        <span className=\"toast-message\">{message}</span>\n        <button className=\"toast-close\" onClick={() => setIsVisible(false)}>\n          ×\n        </button>\n      </div>\n\n    </div>\n  );\n};\n\n// Toast Manager Component\ninterface ToastManagerProps {\n  toasts: Array<{\n    id: string;\n    message: string;\n    type: 'success' | 'error' | 'warning' | 'info';\n    duration?: number;\n  }>;\n  onRemoveToast: (id: string) => void;\n}\n\nexport const ToastManager: React.FC<ToastManagerProps> = ({ toasts, onRemoveToast }) => {\n  return (\n    <>\n      {toasts.map((toast, index) => (\n        <div\n          key={toast.id}\n          style={{\n            position: 'fixed',\n            top: `${2 + index * 5}rem`,\n            right: '2rem',\n            zIndex: 1001 + index\n          }}\n        >\n          <Toast\n            message={toast.message}\n            type={toast.type}\n            duration={toast.duration}\n            onClose={() => onRemoveToast(toast.id)}\n          />\n        </div>\n      ))}\n    </>\n  );\n};\n\nexport default Toast;"],"names":["SalesDashboard","analytics","setAnalytics","useState","depositSchedule","setDepositSchedule","loading","setLoading","toast","setToast","show","message","type","showToast","loadData","useCallback","async","analyticsData","SalesService","getSalesAnalytics","scheduleData","getDepositSchedule","error","useEffect","formatDate","dateString","date","Date","today","diffTime","getTime","diffDays","Math","ceil","concat","abs","_jsxs","className","children","_jsx","onClick","disabled","_Fragment","total_sales","toLocaleString","pending_deposits","today_sales","this_week_sales","this_month_sales","payment_type_breakdown","map","item","getPaymentTypeIcon","getPaymentTypeDisplayName","amount","count","length","schedule","total_amount","markDateAsDeposited","handleMarkDateAsDeposited","orders","order","id","payment_type","order_date","toLocaleDateString","markAsDeposited","orderId","handleMarkAsDeposited","Toast","onClose","hideToast","SalesPage","_ref","duration","isVisible","setIsVisible","timer","setTimeout","clearTimeout","getIcon"],"sourceRoot":""}